// Code generated for package frontend by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/flowhouse.js
// assets/index.html
package frontend

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsFlowhouseJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7a\xfd\x72\x1b\xb7\x76\xf8\xff\x7a\x8a\x93\xb5\x6f\x76\x37\xa2\x96\xa4\xec\xc4\x3f\x93\xa6\x33\x8e\x6c\xdd\xeb\x5f\xfd\x91\x46\x4a\x6e\xa7\x34\xeb\x80\xbb\x87\x24\x24\x2c\xb0\x17\x00\x29\x2a\xb1\x66\xfa\x14\x7d\x80\x3e\x42\xff\xee\xd3\xdc\x27\xe9\x00\xd8\x2f\xac\x48\xd9\x6a\xfa\x4f\x67\x6a\xcf\xd8\x4b\xe0\x7c\xe1\x7c\x1f\xec\x6e\x88\x84\x05\x65\x1a\xa5\x3a\x11\x6b\xae\x61\x02\x83\xf1\xc1\xc1\xc3\x28\x13\xe9\x3a\x47\xae\xe3\x44\x22\xc9\xae\xa3\xc5\x9a\xa7\x9a\x0a\x1e\xc5\xf0\xfb\x01\x80\xc1\x53\x9a\x48\x83\xb0\x10\x32\x27\xfa\x9c\xe6\xa8\x34\xc9\x8b\x88\xe3\x15\xbc\x24\x1a\xa3\xa8\x79\x8c\xa1\x0f\xc3\xc1\x60\x10\xc3\x11\x3c\x1d\x0c\xe0\x08\x9a\xad\x64\x89\x16\xfb\x37\xc1\xf1\xfd\x62\xa1\x50\x47\x31\x7c\x03\xdf\x0d\xe2\x6f\x1c\x4e\x3c\x3e\x00\xa0\x0b\x88\x1e\x46\xc1\x03\x4d\x73\xfc\x68\x59\x07\x71\xb2\x21\x2c\x8a\x61\x32\x81\x20\x70\x72\x01\xec\x84\xb1\xcf\x96\xcc\xcd\x41\x29\x3d\xf2\xec\xbf\x21\xfb\x1f\x92\x1a\x79\xf6\x19\x99\x1b\x08\xe4\x59\x23\xaf\xd9\x77\x56\xfa\x91\xad\x55\x10\x27\x29\xa3\xe9\x65\x44\xb2\xec\xd4\xae\x5a\xc8\x87\x51\x60\x4e\x13\xc4\x89\xe0\x51\xa8\xd6\xf3\x9c\xea\xb0\x07\xee\xe1\x1f\xd7\x28\xaf\xe3\xb1\x21\xb6\x14\x62\xc9\x30\x49\x57\x44\x6a\x95\x30\x41\xb2\x28\x4c\xd7\x52\x22\x37\xe0\x56\xa0\xb0\x20\xe9\x25\x59\xa2\x0a\x47\x30\x0d\x53\x21\xd1\x42\x87\x33\x23\x90\x65\x06\x07\x00\x57\x94\x67\xe2\x2a\x11\x7c\x45\xd4\x2a\x5d\x11\xbe\x44\xa3\xd1\xd2\x51\x20\xaa\x4e\xe7\x33\x54\xa8\xdf\xf3\x37\x82\x64\x27\x84\xb1\x39\x49\x2f\xa3\x4c\x92\xab\x93\x95\x67\xa0\xfb\xa0\x1c\x00\x14\xa2\x58\x33\xa2\xf1\x94\x22\xcb\x54\x14\x8f\x0f\x8c\x94\x07\xb5\x28\xb5\xa2\x4a\x99\x52\xc1\x95\x2e\xfd\xfe\x1c\xf3\xc2\xe0\xc2\xa4\xa5\xe6\x6a\x31\x88\x93\x95\xce\x59\x64\xa2\xa0\x60\x24\xc5\xa8\xff\xf1\xe3\xbb\x9f\xdf\x7e\xfc\xd8\x5f\xf6\xbc\xc0\xa9\x4c\x50\x12\x30\x46\x22\x45\x81\x3c\x8b\x7c\x8a\x4e\x60\x27\xc0\x43\xb7\x65\xa5\xb6\xec\x7f\x2d\xb1\x3f\x2e\xcc\xd2\x87\x0f\xd3\x87\xbf\xb7\x79\xdc\x7c\xf8\x30\xfb\xd5\x32\xf2\xf0\x7f\x21\x6c\x8d\x3e\xfe\xc6\x2c\x7d\x29\xfe\x4f\x98\x8b\x4d\x87\x80\xb4\x6b\x7b\x29\x98\xb3\xb6\x84\x4f\x9c\xf5\xbb\x49\xa2\x51\x34\xb2\xec\x1d\xc9\x1d\x0f\xbd\xa2\xaa\x8c\x82\xb1\x07\x64\xc8\xbd\x5b\xe7\x2d\x20\xa2\xb5\x8c\x02\x6a\x62\x22\x27\x3a\x5d\x45\xfd\x0f\xd9\x61\x3f\x9e\x0e\x66\x0e\xb3\xad\x80\x12\x98\x93\x1c\x83\x5e\xc3\xb2\xe4\x61\xdc\xdc\x82\xa9\xa8\x66\xd4\x85\xba\xf1\x0e\xe6\xb4\x52\x46\xda\xad\x83\x55\x12\xa6\x4c\x28\x54\x3a\x0a\x13\x29\xae\x42\xe3\x26\x06\x2b\x6a\xd3\x6b\xeb\xef\xf0\x70\x7c\x70\x73\xd0\xf2\xcc\x82\x48\x85\x3f\x12\x49\x72\x15\x29\x2d\x1d\x79\x89\x7a\x2d\x39\x28\x2d\x13\x55\x30\xaa\xa3\xf0\x6b\x4b\x3a\x5b\xa7\x2d\x1d\x17\x16\xab\x07\xf6\x7f\x5f\xe1\xd3\x4b\xbc\xee\x81\x75\x82\x19\x4c\x1c\x44\x45\x6a\x12\x1a\x65\x16\x51\x86\xa9\xc8\xf0\xe7\x9f\x5e\x9f\x88\xbc\x10\x1c\x4b\x17\x06\x07\xad\x0c\x09\x83\x6b\x89\x34\xde\xff\xe1\xd0\x38\x7e\x08\x61\x09\x5c\x8a\xea\x70\xec\xa1\x7b\xf0\xbb\x39\xf8\x4d\xfb\x90\x9d\xf0\xac\x2b\xc8\xdf\x4c\x56\x82\x09\x30\x91\x12\x03\x99\xac\x24\x2e\x4a\x41\x83\x07\x41\x3c\x1d\xce\xaa\x24\xfa\x95\x85\xad\x8e\xe9\xd8\x7a\xf9\xdc\xee\xbf\xfa\xdb\xda\x12\x52\x30\x71\x0b\x2d\x05\x1a\xe8\x85\x90\x10\x19\x68\x6a\x0b\x1d\x50\x78\xd6\x41\x4c\x18\xf2\xa5\x5e\x8d\x81\x1e\x1e\x56\xdc\x6c\xb9\xa8\x28\xd6\x90\x53\x3a\x6b\xe9\x74\x5c\x43\x5e\xc2\x04\xb0\x76\x51\xb3\xb2\x81\x09\xdc\x56\x77\x84\xd3\xe1\xcc\xb9\x88\x3b\xe2\xa5\x2d\x0a\x73\x89\xe4\x32\x13\x57\xbc\xae\x0e\x2e\xaf\xd4\xeb\x20\x0a\xc3\x7f\x6a\x2d\x33\x09\xe0\x10\x36\x70\x08\xc1\x2c\x28\xe3\x25\x54\xc8\x30\xd5\x98\x85\x3d\x68\x9e\x4b\x01\xad\x87\x68\xca\xd7\xe8\x7e\xdf\xd8\x7f\x3b\x22\xb4\xcb\xa7\x27\xc3\xad\xba\xba\xb9\x37\x59\x5b\xe1\x6e\x13\x6d\x0a\xdf\x7e\x92\x5d\x72\xa2\x38\x65\xe2\x4a\x75\xc9\xd5\xcb\x5f\x4c\xae\x4a\x2e\xff\xd2\xce\xbe\xfd\xb8\xa1\xbb\x13\xd5\xb5\x4e\xc8\xb2\xd7\x3c\xc3\x2d\x4c\xda\x55\x66\x5c\x97\xf5\x4e\x42\x37\xe6\x6a\x21\x1d\x42\xf0\xe1\xc3\xac\x14\xf5\xf2\xfe\x68\x5a\xd2\xe5\x12\x65\x14\xb8\x04\x1c\xdc\xa6\x50\x55\x82\xbb\x18\x6f\xca\xc2\xdb\x8e\xd9\x56\xdb\x50\x06\x2c\x6e\x90\xeb\xa4\x90\xf6\xff\x97\xb8\x20\x6b\xa6\x23\xe7\xbf\xfd\x3e\xfc\x42\x18\xcd\x4c\x19\x0d\x2b\x03\x84\x30\x17\xdb\xba\xd6\x54\xab\x36\xbb\x87\xb5\x95\xc2\x56\x25\xf0\x01\x5f\xdb\x66\xd4\xe6\xc7\xd7\x5c\x47\xd5\x72\x0f\x86\x83\xba\xb3\xa2\xea\x1d\x79\x17\xb5\x30\x62\xf8\xf4\xc9\xa3\xf0\x0c\x86\xdd\xa5\xe7\xb6\x3d\x1b\x54\xd6\x25\x0c\xa5\x8e\x82\xd7\x3c\x15\x52\x62\xaa\x21\x3c\x17\x05\x38\xe1\x46\x50\x30\x24\x0a\x01\xb9\x46\x09\xc4\x64\x43\x9a\x01\xe5\x1a\x97\x28\x61\x8e\xfa\x0a\x91\xc3\x10\x08\xcf\x1c\xd5\x24\xf0\x13\xe3\x82\x30\x85\x75\x9e\x72\x69\xd2\xa9\xc0\xf4\x6a\x61\x9c\x28\x94\x94\x30\xfa\x5b\x59\x33\x4a\x88\xc3\x09\x84\x5f\x57\x42\x4f\x42\x38\x04\xe4\xb7\xf2\x47\xb5\x6f\x11\xbd\x14\x0a\x13\x08\x1e\x18\x8b\x3b\x72\x07\xbe\x38\x9e\x9d\xeb\x4e\xea\x7e\x69\xf9\x4b\xb2\xf2\xc3\x84\x5c\x90\x6d\xe4\xf6\xf4\x75\x81\x23\x08\xfe\xfc\xea\x3c\xe8\xd9\x85\xb5\x64\x23\x08\xfa\x96\xc0\xf7\x46\x56\xfb\xe4\xf6\x32\xa2\xc9\xb9\x43\xd0\xb8\xd5\x25\x86\x5a\xa7\x29\x2a\x35\xaa\x5b\xcc\x48\x1a\xc0\x9e\x19\x44\xf4\x5a\xf5\x60\xbb\x92\x4d\xcc\x1a\xf1\xec\xbe\x49\x16\x6b\x9e\xe1\x82\x72\xcc\x9a\x7d\x17\x25\xb6\xc3\xfc\x98\xd1\x8d\x09\x26\xdc\xea\x28\x78\x27\x2c\x7b\x58\x88\xb5\xc9\x49\x35\x74\x75\xbc\x7a\xe1\xe6\xa0\x5a\xe6\x19\x4a\xa7\x43\xcb\xd0\xe1\xdc\x38\xa1\x51\x4a\x21\x5b\x22\x7b\x32\xee\x94\x60\xbb\x92\x89\x44\x55\x08\xae\xf0\x1c\xb7\x3a\xae\x33\xea\x4d\xec\x99\xee\x36\x63\x4b\xb8\x90\x68\x5c\xec\x47\x52\x90\xc4\x86\x8f\xdb\x34\xb9\x22\x8f\x62\x17\xb0\xcd\xd8\x87\xa6\xf3\x9c\x1a\x9c\xc4\x40\x4d\x07\xb3\x59\x5d\x28\x5d\x40\x4a\x71\x05\x62\x01\x35\x88\xdf\x6a\xac\x88\x7a\x27\xf8\x3f\xa3\x14\x30\x31\xa0\x89\x62\x34\xc5\x68\x18\x27\x4a\xe4\x18\x6d\x08\x83\xc9\xf3\x76\x22\x55\x1a\xb8\x6d\xf2\xac\x6c\xa7\x4c\x10\x1d\x59\xb0\x4f\x9f\x20\x0c\xe3\x46\xcc\xb6\xd2\xe1\x2b\x17\xea\x7c\x9d\xc7\xf0\xf5\xd7\x96\xc2\x57\x13\x3b\xab\x5a\xe5\x94\xe0\xc6\xe6\x8d\x40\x8d\x9e\xab\xa3\x26\xc5\x5a\xad\x22\x29\xae\xe2\xa6\x4c\xd5\x0d\x84\xf3\x15\x98\xce\xf6\x35\x0a\x35\x95\x1d\x2d\x82\xd5\x1d\x9d\xd5\xf8\x2d\x0a\x17\x8e\xc2\x45\x8b\x82\x69\x1d\x2a\x22\x17\x0d\x11\x27\x87\x29\x25\x2d\xc0\xe9\xc5\x6c\xdc\x72\x69\xea\xce\x6d\x94\x70\xe1\x1e\xdb\x2e\xbd\xed\xe8\x75\xbb\x47\xab\xed\xf4\xb9\x8d\x63\x8b\x37\xa8\x36\x2b\xc7\x2e\xcf\x34\xbd\x30\xc7\xda\x76\x34\x66\xa3\xbf\x9c\x00\x4d\x0e\x43\xf5\x0b\x55\x74\x4e\x19\xd5\xd7\x86\xe9\x9e\xad\xf2\xd8\x56\xf2\xd2\xdf\xaa\xa5\x23\x18\x56\x47\xd9\x47\x77\x02\x2f\xa4\x24\xd7\xd1\x0e\xcc\x64\x41\x19\x8b\xb4\x5c\xa3\x3f\xe6\x57\x9a\x7c\xf9\x39\xeb\xda\x18\xd9\xd3\xfc\x99\x10\x98\xc0\xb4\x52\x48\x19\x23\x1d\x1b\x0f\x9d\x8d\x4b\xa0\xdd\xf6\x35\x5a\xdb\x73\xb8\xe9\x85\x39\xc7\xac\x6d\x4d\x13\x4e\xd6\x63\x1b\x4b\xc4\xbe\x91\xdc\xbf\xed\x33\xfa\x2e\x5e\x9b\xaa\x0d\xd2\xd2\xdc\x33\x38\x6e\xdf\x41\xec\xcc\x86\x4e\x50\xa8\x3a\xc9\xba\xc2\x55\x37\x44\xc9\x12\xf5\x2b\x86\xe6\xf1\x87\xeb\xd7\xf6\x32\x41\x69\x91\x7f\x64\xb8\x44\x9e\x85\x71\x42\x39\x47\xf9\x97\xf3\xb7\x6f\x60\x02\x61\x38\xde\xd7\xc0\x5b\xe6\xa5\x99\xca\xf9\x7f\x43\xd5\xda\x14\x47\x57\x85\x88\xb1\xfd\xb9\x30\x20\xe7\x64\xce\xd0\x3b\x54\x93\xd7\x5c\x7b\x6c\x52\xa0\x3b\x18\x55\x67\x9a\xa4\x97\x98\x8d\x5c\xf9\x73\x79\x59\x53\xcd\x70\x04\xa1\xa9\xa0\xf0\x76\x5e\xa8\xb0\xb5\x6e\xd2\xee\x99\xbe\x36\x00\x75\x0a\x11\x5c\x9f\xd1\xdf\x70\x04\xc7\x8f\x7b\xe5\xda\x5c\xb0\x6c\x04\xc6\xe7\x7a\x75\x7e\x63\x26\xdb\x87\x0f\x1e\x3d\x7a\x14\xb6\xcb\xc0\xea\xc5\x96\xaa\x86\x5a\xc5\xfd\x9c\xe6\x18\x56\xc8\x8a\x11\xae\x31\x33\xcc\x7d\xaa\xad\x8d\x17\x7c\x69\x10\xbf\x1b\xd4\x7b\x2b\x71\x65\x36\x5e\x6d\x50\x5e\x8f\x60\x58\x6f\xec\x3b\x48\x47\xc8\x5e\x93\x11\x34\x61\x34\xf5\x94\xb4\xfb\x90\x6d\x65\x0c\xff\x5f\xe5\x8f\xd5\xee\x52\xd2\x8c\x51\x8e\x6a\x27\xcb\xc5\x23\xf3\xb7\xc5\x35\x35\x63\xb1\x91\xbb\x4b\x27\xa7\x5c\xc8\x3f\xdf\x49\x0c\x9f\x9a\xbf\x61\x17\x53\xdf\xe3\xd0\xad\x93\x1c\xfb\x91\xe5\x60\x36\xbe\xdd\x72\xca\xed\x2d\xc2\x08\x7c\x3d\x8f\x20\x7c\x8b\x4b\x32\xa7\x5a\x41\x81\x12\x14\xa6\x82\x67\xe1\xff\xd9\xe2\x7f\xd2\x16\x2b\xa4\xcb\x95\x1e\x81\x4a\x25\x22\x4f\xdc\x4f\xf8\x06\x06\xc9\x13\x07\x60\x33\xc8\x0b\x89\xa4\x61\x76\x45\x33\xbd\x1a\x41\xf8\x74\xf0\xa7\xb0\x07\xe5\x62\x45\x28\x7c\x62\x56\x2b\x49\x45\x31\x82\xf0\xdb\x66\x61\x4e\xd2\xcb\xa5\x34\x5d\xe0\x89\x93\xb7\x39\x80\xd2\x52\x5c\x1a\xa3\x3f\x48\xd3\xb4\x75\x02\xb7\xfe\x57\xc7\x73\xb8\xeb\x0c\xb7\x88\x86\x0f\x16\xf6\x4f\x49\xc5\xaa\x46\x8d\x60\x1a\x3e\x38\x1e\x3e\xfd\xee\xf4\x91\x19\xe2\x1f\x3c\x3e\x79\x71\xfa\xed\xc0\x3e\x9e\x9e\x9e\x0c\x07\x4f\xca\xc7\x6f\x9f\x1c\x1f\xdb\xc7\xa7\x27\xc7\x4f\x7e\x18\x84\x33\x47\x84\x70\x9a\xdb\x94\xd9\xc8\x6c\x87\xf6\x75\xe1\x3b\x4f\xb6\x96\x25\x98\x99\x5d\xaa\x55\x24\x8a\xf2\xe5\x08\x42\xb1\xd6\x5e\x0e\x73\x09\xbd\xa1\x59\x08\x45\x1d\x7a\xc8\x05\x47\x0f\x56\x0b\xc1\x34\x2d\x5a\x19\xef\x0f\x3a\x42\x3b\xdf\x59\xd5\x9d\x88\x0c\xdd\x71\x3c\x19\x29\xaf\xf4\x7f\xec\x56\x0a\x41\x6b\x6a\xe5\x1c\x61\x0b\x5a\x23\xc7\x60\x04\xbf\x5b\xc4\x97\x44\xad\x4a\x19\xa7\x8f\x7b\xf0\x78\xd6\xb0\x1d\xee\x82\x39\xee\xc1\x71\x0b\xe6\x78\x0f\x9d\x36\xcc\xa3\x3d\x74\xda\xbc\x1e\xef\x82\x19\xf6\x60\x38\x6b\x55\xfd\x9b\xb1\x57\x37\x61\x62\x5f\x4d\xec\xac\x9b\x26\x22\xdc\x94\xb0\xbf\x64\x57\x85\x3f\x74\x3d\xa2\xfd\x9d\x98\xd9\x30\xaa\xcb\x72\xaf\xaa\xac\xae\xd4\xba\xe9\xe3\x8d\xf5\x09\x57\x8e\xcb\xeb\x4e\x7f\x3c\xf1\x00\xfc\x5b\x61\x26\xae\xce\x34\xd1\xaa\xdb\x34\x33\xd4\xb6\x31\x1b\x36\x8d\x59\xd3\xb2\x78\xbd\x99\xf1\x49\x0d\x39\x31\xed\xeb\xd1\x6b\xbe\xa0\x9c\xea\xeb\x71\x5d\xb1\x4b\x5a\x9d\xe6\x6c\x77\x67\x56\x49\x65\x07\x16\xc7\xf3\x62\x36\xa5\x33\xbf\x63\x36\x53\xac\x58\x38\xa0\xc9\x04\x02\xbe\xce\xe7\x28\x03\xd3\x8d\x97\x13\xca\x86\xb0\xb8\x4d\xd5\xe1\x19\x84\xe7\x46\xd0\xb8\x94\x76\x43\xd8\xf8\xd6\x24\x59\xfd\x5f\x6b\xc6\x35\x73\x0d\x31\xca\x33\xdc\x8e\x80\x36\xa1\xc2\xc8\x1c\xd9\xa8\xd2\xd1\x94\xce\x9a\xad\x9c\x6c\x47\x8e\xdb\xa4\xa5\x1d\xf8\x1e\x06\x60\xd7\x2b\xa6\xb1\x77\xab\xd5\xef\xc3\x99\x90\x9a\xf2\x25\x30\xb1\xa4\x69\x3d\x57\x55\xcd\xbe\xcb\x02\x06\x26\x86\x5b\x4b\xa6\xe9\x82\x4b\xbc\x1e\x41\x60\x25\x0b\x7a\x40\x54\xea\xc2\xd4\xb8\x6c\xa3\x67\x25\xa4\xfe\x07\x34\x2d\xfd\x2d\x22\xc9\x25\x5e\x77\x41\x5f\xa8\x74\x27\x28\x51\x69\x79\x83\xda\x28\xcd\xc0\x47\x11\xe9\xc1\x3c\x6e\xcf\x9e\xea\x8a\xea\x74\x05\x51\xc9\xd9\x33\x3d\x51\x58\x49\x3c\x6a\x99\xae\xba\x88\x77\x02\xb4\x36\x00\xbe\x07\x92\x58\x84\x84\x89\x94\x30\x3c\x11\x79\x41\x24\x46\x73\xb7\x1a\x7b\xc0\x23\x98\xef\x04\x2e\x49\xb4\xc6\x32\x27\x49\x4e\xb6\xf7\x91\xc3\x18\xf9\x08\xe6\x49\x63\xd4\x86\xad\xdb\xb3\x30\x0d\x97\xcc\xdd\xde\xed\x60\xd1\x19\x02\x6f\xaa\xfb\x69\x67\x09\xd7\xd9\xbb\x90\x7e\x49\xed\xb5\xf6\x17\x0e\x01\xa5\x3d\x7d\x7c\x6f\x32\xf8\xd5\x42\x3c\xcb\xe8\x06\x52\x46\x94\x9a\x04\x0e\xf7\x68\x85\xac\x38\xd2\xb4\x08\x9e\x97\xa2\x3d\x33\x65\x96\x2f\x9f\xff\xac\xc8\x12\x47\xcf\xfa\xe5\xcf\x67\x73\xd9\x40\x14\x84\x83\x32\xa9\x73\x12\xb8\x22\x53\x96\xd3\xb1\xa9\x2d\x47\x57\xae\x01\x30\xed\xd4\x38\x78\xfe\xf7\x7f\xfd\x77\x38\x61\x34\xbd\x04\x62\xbd\xe8\x59\xdf\xa0\x3f\x07\x2d\x6c\xb5\x01\xc1\xd9\x35\xe8\x15\x71\x29\x2b\xa9\x60\x97\x84\xf2\x1a\x86\x30\x96\x7c\x46\x00\x57\xc4\xf7\x0a\xa0\x25\xeb\x9f\xe4\x59\xff\xbd\x4d\xb2\x70\xe8\xd8\xb4\x64\x21\x59\x06\x42\x82\x7b\xc3\x64\x45\x51\x9f\x63\xe9\x3a\x84\xcf\x9d\x39\x15\x6c\x9d\x73\x58\x21\xc9\x50\xb6\x0f\x6f\x02\x5a\xaf\xb0\x2c\xfc\x89\x33\x50\x3f\xa3\x1b\xc7\xf3\x57\xdf\x37\x6c\xe7\x02\x93\xaa\x4a\x24\x6e\xa1\x1d\xc8\xda\x54\x81\xb6\xd3\xa4\x12\x89\xc6\xd2\x6f\xa2\xd0\xee\x57\xbe\x62\x7f\x24\xd6\x15\xde\x50\xa5\x13\x92\x65\x15\x44\x0f\xdc\xc3\x91\xca\x9b\xe7\xb9\x90\x99\x19\x06\x43\xef\xad\xa2\x36\xa7\xba\x8b\xa5\xd9\xf7\x51\xcc\xca\x4f\x76\xe0\xdf\x8b\x24\xc3\x2a\x2e\xea\x6a\x97\x93\x4b\xfc\x8b\xd5\xe0\x09\x32\x16\x99\x76\xa7\x67\x32\x61\xdc\xb9\xfb\xd2\xab\x3b\xa5\x69\xde\xd3\xe8\x95\x1d\xc1\x4f\x04\xd7\x68\xaf\xc2\xcd\xaf\xd6\xa6\xb5\x74\x92\xae\xa5\x12\xd2\x0c\xd6\xb6\xcf\x41\x19\xde\x02\x59\x2b\x94\x67\x76\x78\x37\x60\xb6\x53\x6b\xc1\x90\x2c\x7b\xb5\x41\xae\x8d\x8e\x91\xa3\x8c\x42\xfb\xc6\x33\xec\x41\x84\x5e\xfa\xf4\x2e\x2f\xfc\x64\x6d\x2b\xcc\xa5\x9f\x52\x61\x77\xb2\x86\x09\xdc\x2e\x24\x2e\x8b\x57\x78\x37\x80\x4c\xe1\x67\x48\x59\xae\x50\x17\x0a\xf7\xa7\xdf\x87\xf2\xbd\xc4\xc8\x39\xef\xfc\x1a\xde\xbe\xf8\x27\x3b\xde\x43\x86\x2a\x45\x9e\x51\xbe\xec\xc1\xe9\x9b\xf7\x7f\x35\x85\xc9\xfd\xfe\x02\x99\xa3\xea\x94\xa1\x4d\xd8\x61\x7c\xbb\x78\xef\xe9\x88\xaa\x4d\x4c\x94\x16\xc5\x8f\x52\x14\x64\x49\xdc\xab\xe4\x71\xa7\x02\xdf\x53\xc3\x1d\x07\x39\xdc\x53\x1e\xe1\x7b\x08\xe1\xef\xff\xf6\x1f\x21\x8c\xec\xc3\x7f\x86\xdd\x7b\xbe\x32\xf5\xeb\x95\xd7\x08\x94\x61\x50\x7e\xc5\x70\xb2\xa2\x2c\x8b\xee\xf2\xdb\x78\x6c\xf4\x6f\x83\x1e\x52\x64\x0c\x22\xcc\x0b\x7d\x1d\xef\x25\xd6\x89\x98\xd0\x18\xc5\x84\x73\xa9\xe1\x52\x29\x5f\x82\x59\xd9\xd8\x60\xe7\x64\x5b\xe3\xda\xe0\xf6\x30\x4b\x6a\x7e\x55\xd3\x73\x91\x5d\xdf\x15\x95\x66\xbf\x89\xf8\xe6\x66\x5c\x69\xa2\x41\x2c\x9a\xd6\xa3\x1b\xec\xa6\x8b\x35\x40\x89\x6d\xdc\xc6\xde\x9e\xfc\x82\x14\xd3\x86\xb7\x9a\x35\xe7\xbd\x0b\xcb\x7b\xcf\x5b\xc2\x97\x69\xa0\x33\x79\xc2\xa4\xcc\xd8\xd3\x88\xba\xab\xd7\x3f\x95\x0b\x65\x7f\x3c\xdb\x47\xc8\x8e\xd4\x26\x95\x1c\x0f\x8a\x6d\xe8\x0b\x69\x6d\x77\x0f\x21\x6b\xf8\x4e\xae\xb3\x4a\xb3\x9b\x3e\xfd\x9c\x6c\xef\x41\xbd\x84\xde\x45\x3b\x27\xdb\x44\x8b\x53\xba\xc5\x2c\x1a\x36\x2f\x1b\x3a\x8e\x56\x1f\x7d\x2f\x44\x7d\x80\xbd\x10\xa5\x10\x4d\x5e\x37\xde\xe4\x41\xc8\xc6\x21\xef\xbe\x57\x9f\xd2\x9d\x57\xc4\xce\x2c\xa2\x20\xa9\xbb\x23\x0f\x07\xc9\xe3\x26\xc8\xbb\xd9\x74\x27\xc6\x30\x19\xb4\xd2\x42\xfb\x24\x7b\xcb\x43\xfd\x46\xcb\xbe\x0f\xde\x31\x48\x19\xb1\x4d\xab\xeb\xbe\x2a\xdc\xf7\x3e\xc0\xdd\xe1\x46\x3f\x08\xc1\x90\xf0\xb8\x1a\xce\xbc\xa2\xe3\xde\x3c\xa7\x5a\x32\x33\x31\x7c\xfa\x54\xbe\x8a\xce\x51\x13\x6f\x81\xb0\x6e\x63\x7f\xf7\x8d\xbb\x53\xa7\x19\xde\x7c\x61\x27\x93\xe6\x55\x44\xa7\x32\xfc\x81\x57\x12\x75\xc1\xb8\x5d\xdf\xf6\x92\xaf\x44\x6c\xaa\xe6\x1e\x08\x8f\xc1\x5d\xa5\xf4\x7f\xb7\x3e\x3e\x4f\xde\xde\x98\x7a\xf4\xbf\x40\xb9\x46\xa6\x3d\x1a\xec\x54\xf7\xf6\xdb\xd6\x6e\xfd\x2e\x03\xc7\x35\xae\xed\x00\xb7\x75\xc8\x6b\x6b\xbd\x5d\x93\x10\xf6\x0c\x48\x1e\x9c\xc1\xdc\xf1\xa5\x46\xf7\x13\xd6\x8c\x68\xf4\xbe\x23\x33\x0b\x89\x16\xaf\xcf\xde\x9f\x69\x49\xf9\x32\x8a\x13\xb5\x9e\x2b\x2d\xa3\x41\x0f\x86\xdf\xf9\x2f\x95\xef\xf8\x50\xce\x7f\xcd\x0f\x0f\xcd\xcc\xf7\xff\xcf\xde\xbf\x8b\x82\x7e\x46\x53\xed\x3e\x35\x51\xfd\xe0\xd0\x42\xb7\x32\x44\xfb\xad\x31\xdc\xf5\x79\x4a\xf5\x05\x60\xfd\x75\x0a\x59\x6b\x91\x8a\xbc\x60\xa8\x31\xf2\x3d\x44\x89\xb5\x4c\xd1\x5d\x7d\x34\x97\x1e\xb5\x2d\xec\x27\x68\xff\x15\x00\x00\xff\xff\xd3\x19\xf3\x89\xde\x2c\x00\x00")

func assetsFlowhouseJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsFlowhouseJs,
		"assets/flowhouse.js",
	)
}

func assetsFlowhouseJs() (*asset, error) {
	bytes, err := assetsFlowhouseJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/flowhouse.js", size: 11486, mode: os.FileMode(436), modTime: time.Unix(1747751802, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xdf\x6f\xe3\xb8\x11\x7e\xdf\xbf\x62\xca\xbc\xb4\xe8\x51\xb4\xb3\x59\xe0\xea\x93\xfc\xd0\x6b\xb7\x2f\xd7\xc3\xb6\xdd\x7b\x2a\x8a\x80\x12\x47\x16\x63\xfe\x50\x49\xca\x3f\x2e\xc8\xff\x5e\x50\x92\x6d\x49\xb1\xb3\x0e\x60\x14\x97\x00\x96\x44\x0e\xbf\xf9\x38\x33\x1f\x45\x31\xfd\x9d\xb0\x45\xd8\xd7\x08\x55\xd0\x6a\xf9\x21\x8d\x17\x50\xdc\xac\x32\x82\x86\x2c\x3f\x00\xa4\x15\x72\x11\x6f\x00\x52\x8d\x81\x43\x51\x71\xe7\x31\x64\xa4\x09\x25\xfd\x9e\x0c\xbb\x0c\xd7\x98\x91\x8d\xc4\x6d\x6d\x5d\x20\x50\x58\x13\xd0\x84\x8c\x6c\xa5\x08\x55\x26\x70\x23\x0b\xa4\xed\xc3\x77\x20\x8d\x0c\x92\x2b\xea\x0b\xae\x30\x9b\x7f\x07\xbe\x72\xd2\xac\x69\xb0\xb4\x94\x21\x33\xf6\x00\xad\xa4\x59\x83\x43\x95\x11\x1f\xf6\x0a\x7d\x85\x18\x08\x54\x0e\xcb\x8c\x54\x21\xd4\x7e\xc1\x98\x0f\xbc\x58\xd7\x3c\x54\x49\x6e\x6d\xf0\xc1\xf1\xba\x10\x26\x29\xac\x66\xc7\x06\xf6\x90\x7c\x4a\xee\x59\xe1\xfd\xa9\x2d\xd1\xd2\x24\x85\xf7\x04\xde\xe1\xac\xb0\x02\x93\xa7\xff\x36\xe8\xf6\xad\x87\x46\xb2\x79\x32\xbf\x4f\xe6\x2c\x54\xa8\xd1\xb3\x9c\x7b\x64\x9d\x01\x6d\x64\x8b\xdf\xc3\x07\x19\x14\x2e\x3f\x2b\xbb\xad\x6c\xe3\x31\x65\x5d\x43\xd7\xd9\x7a\xec\xee\x01\xee\x8a\xc6\x07\xab\x1f\x15\xae\xd0\x08\x78\xee\x9b\x01\x34\xdf\xd1\x0a\xe5\xaa\x0a\x0b\x78\x98\xcd\xea\xdd\x0f\xc7\x2e\xbb\x41\x57\x2a\xbb\xa5\xfb\x05\xf0\x26\xd8\x43\xcf\x4b\x7f\x4d\x02\xcf\x15\x52\xaf\x21\x0c\x11\x6b\x2e\x84\x34\xab\x05\xcc\x92\xfb\x4f\x0e\xf5\xab\x61\x1d\x07\x5a\xa1\xaa\x69\x90\xf5\x70\xa8\xf5\x32\x48\x6b\x16\xe0\x83\x2c\xd6\xfb\x13\x97\x60\xeb\x05\xcc\x4e\xcf\x39\x2f\xd6\x2b\x67\x1b\x23\x16\x70\x57\x96\xe5\xa9\xe7\x57\x2a\x8d\xc0\xdd\x02\xee\x7f\x98\x52\xa2\xb9\x0d\xc1\xea\x05\x7c\x3f\x9c\xe6\xa1\xb3\x75\x31\xea\x29\xad\x09\xd4\xcb\x5f\x71\x01\xf3\x87\x61\x47\x61\x95\x75\x0b\xb8\x7b\x78\x78\x18\x50\xb2\x4e\xa0\x3b\xfa\x98\xd7\x3b\xf0\x56\x49\x01\x77\x42\x88\x71\x10\x52\xd6\x25\x07\x00\xa2\x26\xd8\x41\x14\x69\x6e\xc5\xbe\x4f\x9f\xe1\x1b\x28\x14\xf7\x3e\x23\x86\x6f\x72\xee\xa0\xbb\x50\xc1\xdd\xba\x8f\x4f\xe4\x0c\xf9\xaa\x6b\x2a\x15\xee\xa8\x16\xd4\xd8\xad\xe3\x35\xd4\x74\x46\x0e\xd9\x4f\xf9\x18\x8a\xe6\x8e\x1b\x11\xa7\x41\xbd\xa6\x1f\xdb\x1b\x2d\xe8\x3d\x68\x47\x67\x87\xfa\xbc\x23\xc3\xca\xe2\x3d\x2d\x66\xf8\xa6\xbf\x15\xf2\xc8\x30\x4a\x93\x4b\x83\x8e\x96\xaa\x91\xe2\xe4\x78\x60\xe3\xec\xf6\xd8\x3e\x1d\xdd\xbb\x8f\xe4\x0d\x82\x88\x4f\xb9\xb2\xc5\x3a\x4e\x4e\xc5\xe2\x04\x2f\x05\xc6\x20\xd4\x74\x3e\x40\x19\xe3\xf4\x36\xb4\x0b\xce\xc8\x0c\x20\x2d\xad\xd3\xd3\x26\x89\x4a\x78\x0c\xe3\xe6\x41\xc7\x01\x39\x8e\xa5\xb1\xde\x6a\x32\xb5\x8d\x2a\x6f\x0b\x7a\xf9\x55\x6a\x84\xdf\xff\xf2\xf5\xc7\x3f\xa4\xac\x6f\x7a\x6d\x7b\x31\x20\xe7\x6d\x0a\xab\xce\xda\x44\xaf\x3c\x47\x05\xa5\x75\x19\x09\x52\xe3\xa3\x0f\xdc\x05\xb2\xfc\x57\xbc\xa4\xac\xed\xbd\x30\x52\x9a\xba\x09\x10\x17\xea\x8c\x08\x1e\x30\x0e\xa7\xca\x16\x5c\x91\x7e\xd1\x1d\x00\x8e\x42\x10\xf3\xec\xac\x02\x4d\xe7\x6d\x26\x40\x8a\xb1\xf7\x73\xd3\x61\x42\x6e\x6e\x38\x4f\x34\x82\x2c\xff\x6a\xc4\x4d\xe6\x18\xc1\xae\x9c\x61\xeb\xf7\xfa\xf9\x9d\x6d\x4e\xd9\x6d\x4b\xee\x0e\xbe\xda\x1a\xa2\x4c\xfd\xff\xa5\xe6\x86\x51\x35\x8d\xce\xd1\xf5\x01\xb2\x75\x4b\xe2\x18\xdb\xe3\xf3\x9b\xb1\xd5\xd2\x64\x24\x5e\xf9\x2e\x23\xf3\xd9\x6c\x36\x23\xb0\xe1\xaa\xc1\x8c\x7c\x9a\xcd\x2e\x91\xf0\x9a\x2b\x35\x02\x0e\xb8\x0b\x10\x7f\xa8\x6e\x02\x9e\x4f\x53\xfc\xfb\xb1\xb2\xd6\x4b\xb3\x82\x60\x2d\x68\x6e\xf6\xa0\xdb\xc5\x85\x97\x25\x16\x01\x72\x67\xb7\x1e\x1d\xd4\xe8\x22\x2c\x37\x05\x26\xe7\x29\xb0\x96\xc3\x0d\xab\x61\xd4\x7e\x93\xd2\xf8\x2c\x55\x40\xf7\x8d\xaa\x88\xb9\x2b\x5b\x43\x7f\x0e\xea\xc2\x5c\x6e\x57\x4f\x79\x13\x82\x35\x7d\x41\x75\x0f\x64\x40\xea\x8b\x6a\x4e\x25\x94\x07\x03\x79\x30\xb4\x76\x52\x73\xb7\x6f\xef\xbd\x8e\xc5\x44\x96\x7f\x4c\x59\x37\xfa\xb7\x26\xd0\x3f\x3b\xe4\x6b\x61\xb7\xe6\x8a\x44\xe4\x07\xdb\x73\xb9\xb8\x2e\xec\xd7\x06\x3e\xaa\x08\x55\xac\xf9\x4e\xaf\x47\xd7\x64\xcc\xe4\xb2\x7e\xa1\xdb\x50\xd2\x0e\x86\x80\x6e\x54\x90\xb5\x42\x88\xfb\xa5\x8c\x3c\x3f\x43\xd2\xce\xfd\x2f\x76\x6b\x7e\x42\x03\x2f\x2f\x47\x2a\xcf\xcf\x14\x1c\x37\x2b\x84\xe4\x73\x8c\xe9\xdf\x62\x0c\x3d\xbc\xbc\x5c\xa0\x0a\x90\xda\x3a\xb4\x91\x86\x76\xc9\xef\xe0\x7f\x6a\xdf\x0b\x6f\xe0\xbe\x09\xd9\x81\x4a\x6b\x0e\x0b\x4e\x84\xfc\x99\x6b\x6c\x11\x87\xf8\x29\xeb\x0c\x87\x6e\xe2\x1e\xfa\x2d\xbe\xec\x40\xf8\xea\x41\x29\xeb\x22\x79\x21\xab\x17\xdf\xa1\xb7\xa9\xed\xe1\xba\xee\x9b\x5c\xcb\x70\x5c\x88\xff\xd9\x18\xf8\x47\xfc\xf6\xe8\x4a\xa3\xef\x9d\x6c\xa4\xce\x22\xa7\x6c\xbc\xe5\x1a\x91\x1a\x3f\x68\x2e\xcd\x64\x37\xf8\x27\xd0\xed\xee\x34\x7e\x79\xb4\x1b\x54\xb5\xa2\xf3\x19\xd4\x81\x7e\x84\x7a\x47\x1f\xa6\x7b\xc9\x48\x2e\x7e\x4c\x86\x47\x21\x37\x64\x39\x89\xc0\xc9\x64\xf8\x1d\x34\x31\x4b\x59\xe4\x31\x61\x78\x8e\xef\x11\xb1\xdd\xc6\xc7\x6f\x54\x2f\x73\xa9\x64\xd8\x2f\x2a\x29\x04\x8e\x16\xb1\xaf\xa8\x6b\xc5\x03\x4e\x63\x36\x91\xf3\x60\xc4\xa3\xb3\xdb\x7f\x3f\x3e\xfe\xfc\xcb\xdf\x1f\x1f\xff\xf3\x4a\xc1\xd3\x9d\x73\x0c\xd0\xb9\x15\xa8\x17\xf8\x00\xb6\x4d\xd2\x09\xb8\xd7\xfe\x85\xce\x0b\xc2\x27\xcb\x0f\xef\xd1\xef\xb7\x94\x7b\xb5\x66\xdf\xaf\xd6\x37\x25\x37\x54\xe8\x1b\x86\x97\x54\x79\x5e\x5f\x57\x26\x66\x28\xb6\xb8\x69\xb9\x1c\xeb\x71\x86\xda\xa9\x0f\x32\x34\xc8\xec\xa4\xeb\xa6\x74\xcf\xbe\xa3\xfb\x34\xf4\x1e\xc7\xc5\x8b\xda\x6e\xf0\x75\x25\x1d\xde\xdf\x1e\x0b\x6b\xc4\xf4\x0d\x4e\x2f\xbd\xc1\xcf\x70\x7f\xad\xc5\x69\xc3\x41\xb4\xbe\x70\xb2\x0e\xe0\x5d\x71\xf9\xbc\xa5\x3f\x59\xf9\x98\xcc\x93\x79\x7b\x80\xf3\xe4\x09\x2c\x53\xd6\x8d\x5d\xbe\x07\xea\x74\x74\x73\x3a\xae\x79\xf2\xe4\x3a\xb0\x77\x1c\x3a\x3d\x4d\xcf\x9c\xae\x76\xb2\xdd\x6e\x93\x95\x0f\x3c\xc8\xa2\x45\x6e\x57\x4c\xcf\x94\xe5\x02\xdd\xf5\x30\x85\x30\x4f\x3e\x29\x94\x6d\x44\xa9\xb8\xc3\x16\x8b\x3f\xf1\x1d\x53\x32\xf7\xec\x0b\xaf\xf9\x17\xee\x3c\xb2\x4f\xc9\xc7\x64\xc6\x6a\x1e\xff\x9d\xc7\xeb\xc8\xb2\xf2\x70\xee\xf0\xda\x36\x65\xdd\x19\x49\xca\xda\x33\xc6\xff\x05\x00\x00\xff\xff\x90\x9c\xed\x9f\x73\x14\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 5235, mode: os.FileMode(436), modTime: time.Unix(1747749493, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/flowhouse.js": assetsFlowhouseJs,
	"assets/index.html":   assetsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"flowhouse.js": &bintree{assetsFlowhouseJs, map[string]*bintree{}},
		"index.html":   &bintree{assetsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

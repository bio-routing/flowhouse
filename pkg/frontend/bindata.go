// Code generated for package frontend by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/flowhouse.js
// assets/index.html
package frontend

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsFlowhouseJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3a\xdb\x72\x1b\xb9\x72\xef\xfa\x8a\xde\xb1\x8e\x67\x66\x45\x0d\x49\xd9\xbb\x3e\x26\x3d\xde\xf2\xca\xd6\x39\x4e\x7c\xcb\x5a\xbb\x27\x15\x9a\xf1\x82\x33\x4d\x12\xd6\x0c\x30\x07\xc0\x50\xd4\xda\xaa\xca\x57\xe4\x03\xf2\x09\x79\xce\xd7\xec\x97\xa4\x70\x99\xab\x48\xd9\xce\xe6\x25\x55\xb1\xab\xec\x21\xd0\x37\x74\x37\xfa\x02\x60\x43\x04\x2c\x69\xa6\x50\xc8\x53\x5e\x32\x05\x31\x8c\xa6\x07\x07\x87\x41\xca\x93\x32\x47\xa6\xc2\x48\x20\x49\xaf\x82\x65\xc9\x12\x45\x39\x0b\x42\xf8\x78\x00\xa0\xf1\xa4\x22\x42\x23\x2c\xb9\xc8\x89\x3a\xa7\x39\x4a\x45\xf2\x22\x60\x78\x09\x4f\x89\xc2\x20\x68\x3e\x43\x18\xc2\x78\x34\x1a\x85\x70\x0c\x0f\x47\x23\x38\x86\x66\x2a\x5a\xa1\xc1\xfe\x8d\x33\x7c\xbd\x5c\x4a\x54\x41\x08\xdf\xc2\xf7\xa3\xf0\x5b\x8b\x13\x4e\x0f\x00\xe8\x12\x82\xc3\xc0\xbb\xa3\x68\x8e\xef\x0d\x6b\x2f\x8c\x36\x24\x0b\x42\x88\x63\xf0\x3c\x2b\x17\xc0\x4e\x18\xf3\x6d\xc8\x5c\x1f\x38\xe9\x91\xa5\xff\x03\xd9\xff\x90\xd4\xc8\xd2\xcf\xc8\xdc\x40\x20\x4b\x1b\x79\xf5\xbc\xb5\xd2\x9b\xac\x94\x5e\x18\x25\x19\x4d\x2e\x02\x92\xa6\x67\x66\xd4\x40\x1e\x06\x9e\x5e\x8d\x17\x46\x9c\x05\xbe\x2c\x17\x39\x55\xfe\x00\xec\xc7\x3f\x95\x28\xae\xc2\xa9\x26\xb6\xe2\x7c\x95\x61\x94\xac\x89\x50\x32\xca\x38\x49\x03\x3f\x29\x85\x40\xa6\xc1\x8d\x40\x7e\x41\x92\x0b\xb2\x42\xe9\x4f\x60\xe6\x27\x5c\xa0\x81\xf6\xe7\x5a\x20\xc3\x0c\x0e\x00\x2e\x29\x4b\xf9\x65\xc4\xd9\x9a\xc8\x75\xb2\x26\x6c\x85\x5a\xa3\xce\x51\x20\xa8\x56\xd7\x65\x28\x51\xbd\x66\x2f\x38\x49\x4f\x49\x96\x2d\x48\x72\x11\xa4\x82\x5c\x9e\xae\x3b\x06\xfa\x1a\x94\x03\x80\x82\x17\x65\x46\x14\x9e\x51\xcc\x52\x19\x84\xd3\x03\x2d\xe5\x41\x2d\x4a\xad\x28\x27\x53\xc2\x99\x54\xce\xef\xcf\x31\x2f\x34\x2e\xc4\x2d\x35\x57\x83\x5e\x18\xad\x55\x9e\x05\x7a\x17\x14\x19\x49\x30\x18\xbe\x7f\xff\xea\xe7\x97\xef\xdf\x0f\x57\x83\xce\xc6\xa9\x4c\xe0\x08\x68\x23\x91\xa2\x40\x96\x06\x5d\x8a\x56\x60\x2b\xc0\xa1\x9d\x32\x52\x1b\xf6\xbf\x3a\xec\xf7\x4b\x3d\xf4\xee\xdd\xec\xf0\x63\x9b\xc7\xf5\xbb\x77\xf3\x5f\x0d\xa3\x0e\xfe\x2f\x24\x2b\xb1\x8b\xbf\xd1\x43\x5f\x8a\xff\x13\xe6\x7c\xd3\x23\x20\xcc\xd8\x5e\x0a\x7a\xad\x2d\xe1\x23\x6b\xfd\x7e\x90\x68\x14\x8d\x59\xfa\x8a\xe4\x96\x87\x5a\x53\xe9\x76\xc1\xb4\x03\xa4\xc9\xbd\x2a\xf3\x16\x10\x51\x4a\x04\x1e\xd5\x7b\x22\x27\x2a\x59\x07\xc3\x77\xe9\xd1\x30\x9c\x8d\xe6\x16\xb3\xad\x00\x07\xcc\x48\x8e\xde\xa0\x61\xe9\x78\x68\x37\x37\x60\x32\xa8\x19\xf5\xa1\xae\x3b\x0b\xb3\x5a\x71\x3b\xed\xc6\xc2\x2a\x09\x93\x8c\x4b\x94\x2a\xf0\x23\xc1\x2f\x7d\xed\x26\x1a\x2b\x68\xd3\x6b\xeb\xef\xe8\x68\x7a\x70\x7d\xd0\xf2\xcc\x82\x08\x89\x6f\x88\x20\xb9\x0c\xa4\x12\x96\xbc\x40\x55\x0a\x06\x52\x89\x48\x16\x19\x55\x81\x7f\xd7\x90\x4e\xcb\xa4\xa5\xe3\xc2\x60\x0d\xc0\xfc\xdf\x55\xf8\xec\x02\xaf\x06\x60\x9c\x60\x0e\xb1\x85\xa8\x48\xc5\xbe\x56\x66\x11\xa4\x98\xf0\x14\x7f\xfe\xe9\xf9\x29\xcf\x0b\xce\xd0\xb9\x30\x58\x68\xa9\x49\x68\x5c\x43\xa4\xf1\xfe\x77\x47\xda\xf1\x7d\xf0\x1d\xb0\x13\xd5\xe2\x98\x45\x0f\xe0\xa3\x5e\xf8\x75\x7b\x91\xbd\xed\x59\x67\x90\xbf\xeb\xa8\x04\x31\x64\x3c\x21\x1a\x32\x5a\x0b\x5c\x3a\x41\xbd\x3b\x5e\x38\x1b\xcf\xab\x20\xfa\x8d\x81\xad\x96\x69\xd9\x76\xe2\xb9\x99\x7f\xf6\xf7\xd2\x10\x92\x10\xdb\x81\x96\x02\x35\xf4\x92\x0b\x08\x34\x34\x35\x89\x0e\x28\x3c\xea\x21\x46\x19\xb2\x95\x5a\x4f\x81\x1e\x1d\x55\xdc\x4c\xba\xa8\x28\xd6\x90\x33\x3a\x6f\xe9\x74\x5a\x43\x5e\x40\x0c\x58\xbb\xa8\x1e\xd9\x40\x0c\x37\xd5\x1d\xe0\x6c\x3c\xb7\x2e\x62\x97\x78\x61\x92\xc2\x42\x20\xb9\x48\xf9\x25\xab\xb3\x83\x8d\x2b\xf5\x38\xf0\x42\xf3\x9f\x19\xcb\xc4\x1e\x1c\xc1\x06\x8e\xc0\x9b\x7b\x6e\xbf\xf8\x12\x33\x4c\x14\xa6\xfe\x00\x9a\x6f\x27\xa0\xf1\x10\x45\x59\x89\xf6\xf7\xb5\xf9\xb7\x27\x42\x3b\x7d\x76\x64\xb8\x91\x57\x37\x5f\x4d\xd6\x64\xb8\x9b\x44\x9b\xc4\xb7\x9f\x64\x9f\x1c\x2f\xce\x32\x7e\x29\xfb\xe4\xea\xe1\x2f\x26\x57\x05\x97\x7f\x6d\x47\xdf\x61\xd8\xd0\xdd\x89\x6a\x4b\x27\xcc\xd2\xe7\x2c\xc5\x2d\xc4\xed\x2c\x33\xad\xd3\x7a\x2f\xa0\x6b\x73\xb5\x90\x8e\xc0\x7b\xf7\x6e\xee\x44\xbd\xf8\x7a\x34\x25\xe8\x6a\x85\x22\xf0\x6c\x00\xf6\x6e\x52\xa8\x32\xc1\x6d\x8c\x37\x2e\xf1\xb6\xf7\x6c\xab\x6c\x70\x1b\x16\x37\xc8\x54\x54\x08\xf3\xff\x53\x5c\x92\x32\x53\x81\xf5\xdf\xe1\x10\x7e\x21\x19\x4d\x75\x1a\xf5\x2b\x03\xf8\xb0\xe0\xdb\x3a\xd7\x54\xa3\x26\xba\xfb\xb5\x95\xfc\x56\x26\xe8\x02\x3e\x37\xc5\xa8\x89\x8f\xcf\x99\x0a\xaa\xe1\x01\x8c\x47\x75\x65\x45\xe5\x2b\xf2\x2a\x68\x61\x84\xf0\xe9\x53\x87\xc2\x23\x18\xf7\x87\x1e\x9b\xf2\x6c\x54\x59\x97\x64\x28\x54\xe0\x3d\x67\x09\x17\x02\x13\x05\xfe\x39\x2f\xc0\x0a\x37\x81\x22\x43\x22\x11\x90\x29\x14\x40\x74\x34\xa4\x29\x50\xa6\x70\x85\x02\x16\xa8\x2e\x11\x19\x8c\x81\xb0\xd4\x52\x8d\xbc\x6e\x60\x5c\x92\x4c\x62\x1d\xa7\x6c\x98\xb4\x2a\xd0\xb5\x9a\x1f\x46\x12\x05\x25\x19\xfd\xcd\xe5\x0c\x07\x71\x14\x83\x7f\xb7\x12\x3a\xf6\xe1\x08\x90\xdd\x88\x1f\xd5\xbc\x41\xec\x84\x50\x88\xc1\xbb\xa3\x2d\x6e\xc9\x1d\x74\xc5\xe9\xd8\xb9\xae\xa4\xbe\x2e\x2c\x7f\x49\x54\x3e\x8c\xc8\x07\xb2\x0d\xec\x9c\xba\x2a\x70\x02\xde\x5f\x9e\x9d\x7b\x03\x33\x50\x8a\x6c\x02\xde\xd0\x10\xf8\x41\xcb\x6a\xbe\xec\x5c\x4a\x14\x39\xb7\x08\x0a\xb7\xca\x61\xc8\x32\x49\x50\xca\x49\x5d\x62\x06\x42\x03\x0e\x74\x23\xa2\x4a\x39\x80\xed\x5a\x34\x7b\x56\x8b\x67\xe6\x75\xb0\x28\x59\x8a\x4b\xca\x30\x6d\xe6\xed\x2e\x31\x15\xe6\xfb\x94\x6e\xf4\x66\xc2\xad\x0a\xbc\x57\xdc\xb0\x87\x25\x2f\x75\x4c\xaa\xa1\xab\xe5\xd5\x03\xd7\x07\xd5\x30\x4b\x51\x58\x1d\x1a\x86\x16\xe7\xda\x0a\x8d\x42\x70\xd1\x12\xb9\x23\xe3\x4e\x09\xb6\x6b\x11\x09\x94\x05\x67\x12\xcf\x71\xab\xc2\x3a\xa2\x5e\x87\x1d\xd3\xdd\x64\x6c\x08\x17\x02\xb5\x8b\xbd\x21\x05\x89\xcc\xf6\xb1\x93\x3a\x56\xe4\x41\x68\x37\x6c\xd3\xf6\xa1\xae\x3c\x67\x1a\x27\xd2\x50\xb3\xd1\x7c\x5e\x27\x4a\xbb\x21\x05\xbf\x04\xbe\x84\x1a\xa4\x5b\x6a\xac\x89\x7c\xc5\xd9\xbf\xa0\xe0\x10\x6b\xd0\x48\x66\x34\xc1\x60\x1c\x46\x92\xe7\x18\x6c\x48\x06\xf1\xe3\x76\x20\x95\x0a\x98\x29\xf2\x8c\x6c\x67\x19\x27\x2a\x30\x60\x9f\x3e\x81\xef\x87\x8d\x98\x6d\xa5\xc3\x37\x76\xab\xb3\x32\x0f\xe1\xee\x5d\x43\xe1\x9b\xd8\xf4\xaa\x46\x39\x0e\x5c\xdb\xbc\x11\xa8\xd1\x73\xb5\xd4\xa8\x28\xe5\x3a\x10\xfc\x32\x6c\xd2\x54\x5d\x40\x58\x5f\x81\xd9\x7c\x5f\xa1\x50\x53\xd9\x51\x22\x18\xdd\xd1\x79\x8d\xdf\xa2\xf0\xc1\x52\xf8\xd0\xa2\xa0\x4b\x87\x8a\xc8\x87\x86\x88\x95\x43\xa7\x92\x16\xe0\xec\xc3\x7c\xda\x72\x69\x6a\xd7\xad\x95\xf0\xc1\x7e\xb6\x5d\x7a\xdb\xd3\xeb\x76\x8f\x56\xdb\xe1\x73\x1b\x86\x06\x6f\x54\x4d\x56\x8e\xed\xd6\x34\xfb\xa0\x97\xb5\xed\x69\xcc\xec\x7e\xd7\x01\xea\x18\x86\xf2\x17\x2a\xe9\x82\x66\x54\x5d\x69\xa6\x7b\xa6\xdc\xb2\x8d\xe4\xce\xdf\xaa\xa1\x63\x18\x57\x4b\xd9\x47\x37\x86\x27\x42\x90\xab\x60\x07\x66\xb4\xa4\x59\x16\x28\x51\x62\xb7\xcd\xaf\x34\xf9\xf4\x73\xd6\x35\x7b\x64\x4f\xf1\xa7\xb7\x40\x0c\xb3\x4a\x21\x6e\x8f\xf4\x6c\x3c\xb6\x36\x76\x40\xbb\xed\xab\xb5\xb6\x67\x71\xb3\x0f\x7a\x1d\xf3\xb6\x35\xf5\x76\x32\x1e\xdb\x58\x22\xec\x1a\xc9\xfe\xdb\x5e\x63\xd7\xc5\x6b\x53\xb5\x41\x5a\x9a\x7b\x04\x27\x15\x43\xb9\xe6\x97\x6f\x78\x51\x16\x26\x04\x5a\xe9\xa0\x2a\x1f\x23\x78\x63\x13\xa1\x1d\x00\xa2\x40\xff\x56\xc0\x19\xc2\x32\xe3\x97\xa0\x38\xa4\x54\x16\x19\xb9\x02\xb5\x46\x30\x51\x2d\xf2\x06\xe0\xa5\xba\x30\x11\xed\xca\xa4\x1d\xf1\x30\x2f\xd4\x55\x55\x2f\x55\x67\x4e\xd1\x0a\xd5\xb3\x0c\xf5\xe7\x8f\x57\xcf\xcd\xf1\x84\x54\x3c\x7f\x9f\xe1\x0a\x59\xea\x87\x11\x65\x0c\xc5\x5f\xcf\x5f\xbe\x80\x18\x7c\x7f\x7a\x33\xf9\x38\xe3\x1b\x4e\xce\xf2\xee\x48\x61\x43\x65\xa9\xf3\xad\x4d\x6c\x44\xbb\xd3\x39\xd7\x20\xe7\x64\x91\x61\x47\x4f\x4d\xa8\xb4\x15\xb7\x8e\xaa\x56\x57\x54\xbe\x55\x24\xb9\xc0\x74\x62\x33\xaa\x0d\xf5\x8a\xaa\x0c\x27\xe0\xeb\xa4\x0c\x2f\x17\x85\xf4\x5b\xe3\x3a\x92\xbf\x55\x57\x1a\xa0\x8e\x4a\x9c\xa9\xb7\xf4\x37\x9c\xc0\xc9\xfd\x81\x1b\x5b\xf0\x2c\x9d\x80\x76\xe3\x41\x1d\x32\x33\x9d\x40\xfc\x3b\xf7\xee\xdd\xf3\xdb\x99\x65\xfd\x64\x4b\x65\x43\xad\xe2\x7e\x4e\x73\xf4\x2b\x64\x99\x11\xa6\x30\xd5\xcc\xbb\x54\x5b\x13\x4f\xd8\x4a\x23\x7e\x3f\xaa\xe7\xd6\xfc\x52\x4f\x3c\xdb\xa0\xb8\x9a\xc0\xb8\x9e\xd8\xb7\x90\x9e\x90\x83\x26\xc8\x28\x92\xd1\xa4\xa3\xa4\xdd\x8b\x6c\x2b\x63\xfc\xe7\xca\xc5\xab\xd9\x95\xa0\x69\x46\x19\xca\x9d\x2c\x97\xf7\xf4\xdf\x16\xd7\x44\x77\xda\x5a\xee\x3e\x9d\x9c\x32\x2e\xfe\x72\x2b\x31\x7c\xa8\xff\xfa\x7d\x4c\xf5\x15\x8b\x6e\xad\xe4\xa4\xbb\x59\x2d\xcc\xa6\x6b\xb7\x9c\x32\x73\x30\x31\x81\xae\x9e\x27\xe0\xbf\xc4\x15\x59\x50\x25\xa1\x40\x01\x12\x13\xce\x52\xff\xff\x6d\xf1\xbf\x69\x8b\x35\xd2\xd5\x5a\x4d\x40\x26\x02\x91\x45\xf6\x27\x7c\x0b\xa3\xe8\x81\x05\x30\x11\xe4\x89\x40\xd2\x30\xbb\xa4\xa9\x5a\x4f\xc0\x7f\x38\xfa\x93\x3f\x00\x37\x58\x11\xf2\x1f\xe8\xd1\x4a\x52\x5e\x4c\xc0\xff\xae\x19\x58\x90\xe4\x62\x25\x74\x61\x79\x6a\xe5\x6d\x16\x20\x95\xe0\x17\xda\xe8\x77\x92\x24\x69\xad\xc0\x8e\xff\xcd\xf2\x1c\xef\x5a\xc3\x0d\xa2\xfe\x9d\xa5\xf9\xe3\xa8\x18\xd5\xc8\x09\xcc\xfc\x3b\x27\xe3\x87\xdf\x9f\xdd\xf3\x07\xe0\xdf\xb9\x7f\xfa\xe4\xec\xbb\x91\xf9\x3c\x3b\x3b\x1d\x8f\x1e\xb8\xcf\xef\x1e\x9c\x9c\x98\xcf\x87\xa7\x27\x0f\x7e\x1c\xf9\x73\x4b\x84\x30\x9a\x9b\x90\xd9\xc8\x6c\xce\x01\xca\xa2\xeb\x3c\x69\x29\x1c\x98\x6e\x87\xaa\x51\x24\x92\xb2\xd5\x04\x7c\x5e\xaa\x4e\x0c\xb3\x11\xbd\xa1\x59\x70\x49\x2d\xba\xcf\x38\xc3\x0e\xac\xe2\x3c\x53\xb4\x68\x45\xbc\x3f\xe8\x08\xed\x78\x67\x54\x77\xca\x53\xb4\xcb\xe9\xc8\x48\x59\xa5\xff\x13\x3b\x52\x70\x5a\x53\x73\xad\x89\x49\x97\x8d\x1c\xa3\x09\x7c\x34\x88\x4f\x89\x5c\x3b\x19\x67\xf7\x07\x70\x7f\xde\xb0\x1d\xef\x82\x39\x19\xc0\x49\x0b\xe6\x64\x0f\x9d\x36\xcc\xbd\x3d\x74\xda\xbc\xee\xef\x82\x19\x0f\x60\x3c\x6f\x15\x12\xd7\xd3\x4e\xde\x84\xd8\xdc\x76\xec\xcc\x9b\x7a\x47\xd8\xc6\x63\x7f\xce\xae\xb2\xbc\x6f\xcb\x4e\x5b\x11\xe8\x76\x33\xa8\xd3\xf2\xa0\xca\xac\x36\xd5\xda\x86\xe6\x85\xf1\x09\x9b\x8e\xdd\x09\x6a\xb7\xe3\xe9\x00\x74\x0f\x9a\x33\x7e\xf9\x56\x11\x25\xfb\x75\x78\x86\xca\xd4\x7a\xe3\xa6\xd6\x6b\xaa\xa0\x4e\xb9\xa7\x7d\x52\x41\x4e\x74\x45\x7c\xfc\x9c\x2d\x29\xa3\xea\x6a\x5a\x67\x6c\x47\xab\x57\xef\xed\x2e\xf6\x2a\xa9\x4c\x0f\x64\x79\x7e\x98\xcf\xe8\xbc\x5b\x84\xeb\xc6\x98\x2f\x2d\x50\x1c\x83\xc7\xca\x7c\x81\xc2\xd3\x05\xbe\x6b\x7a\x36\x24\x0b\xdb\x54\x2d\x9e\x46\x78\xac\x05\x0d\x9d\xb4\x1b\x92\x4d\x6f\x34\xa7\xd5\xff\xb5\x66\x6c\x7d\xd8\x10\xa3\x2c\xc5\xed\x04\x68\xb3\x55\x32\xb2\xc0\x6c\x52\xe9\x68\x46\xe7\xcd\x54\x4e\xb6\x13\xcb\x2d\x6e\x69\x07\x7e\x80\x11\x98\xf1\x8a\x69\xd8\x39\x28\x1b\x0e\xe1\x2d\x17\x8a\xb2\x15\x64\x7c\x45\x93\xba\x55\xab\xfa\x07\x1b\x05\x34\x4c\x08\x37\x86\x74\xd1\x05\x17\x78\x35\x01\xcf\x48\xe6\x0d\x80\xc8\xc4\x6e\x53\xed\xb2\x8d\x9e\x25\x17\xea\x1f\x51\x77\x09\x37\x88\x44\x17\x78\xd5\x07\x7d\x22\x93\x9d\xa0\x44\x26\xee\x50\xb6\x51\x9a\x86\x0f\x02\x32\x80\x45\xd8\x6e\x67\xe5\x25\x55\xc9\x1a\x02\xc7\xb9\x63\x7a\x5d\x2d\x3b\x89\x27\x2d\xd3\x55\x67\xfb\x56\x80\xd6\x04\xc0\x0f\x40\x22\x83\x10\x65\x3c\x21\x19\x9e\xf2\xbc\x20\x02\x83\x85\x1d\x0d\x3b\xc0\x13\x58\xec\x04\x76\x24\x5a\x9d\x9e\x95\x24\x27\xdb\xaf\x91\x43\x1b\xf9\x18\x16\x51\x63\xd4\x86\xad\x9d\x33\x30\x0d\x97\xd4\x1e\x08\xee\x60\xd1\xeb\x2b\xaf\xab\x23\x6f\x6b\x09\x5b\xda\xdb\x2d\xfd\x94\x9a\x93\xf2\x2f\xec\x02\x9c\x3d\xbb\xf8\x9d\xd6\xe0\x57\x03\xf1\x28\xa5\x1b\x48\x32\x22\x65\xec\x59\xdc\xe3\x35\x66\xc5\xb1\xa2\x85\xf7\xd8\x89\xf6\x48\xa7\x59\xb6\x7a\xfc\xb3\x24\x2b\x9c\x3c\x1a\xba\x9f\x8f\x16\xa2\x81\x28\x08\x03\xa9\x43\x67\xec\xd9\x24\xe3\xd2\xe9\x54\xe7\x96\xe3\x4b\x5b\x00\xe8\x72\x6a\xea\x3d\xfe\xfd\xdf\xfe\x03\x4e\x33\x9a\x5c\x00\x31\x5e\xf4\x68\xa8\xd1\x1f\xeb\x2e\x49\x67\x1b\xe0\x2c\xd3\x7d\x12\xb1\x21\x2b\xaa\x60\x57\x84\xb2\x1a\x86\x64\x59\xf4\x19\x01\x6c\x12\xdf\x2b\x80\x12\xd9\xf0\x34\x4f\x87\xaf\x4d\x90\x85\x23\xcb\xa6\x25\x0b\x49\x53\xe0\x02\xec\xa5\x95\x11\x45\x7e\x8e\xa5\xad\x10\x3e\xb7\xe6\x84\x67\x65\xce\x60\x8d\x24\x45\xd1\x5e\xbc\xde\xd0\xba\x3f\xb4\x86\x88\xac\x81\x86\x29\xdd\x58\x9e\xbf\x76\x7d\xc3\x54\x2e\x10\x57\x59\x22\xb2\x03\xed\x8d\xac\x74\x16\x68\x3b\x4d\x22\x90\x28\x74\x7e\x13\xf8\x66\xbe\xf2\x15\xf3\x23\x32\xae\xf0\x82\x4a\x15\x91\x34\xad\x20\x06\x60\x3f\x8e\x65\xde\x7c\x2f\xb8\x48\x75\x33\xe8\x77\x2e\x2a\x95\x5e\xd5\x6d\x2c\xf5\x7c\x17\x45\x8f\xfc\x64\xce\x10\xf6\x22\x09\xbf\xda\x17\x75\xb6\xcb\xc9\x05\xfe\xd5\x68\xf0\x14\xb3\x2c\xd0\xe5\xce\x40\x47\xc2\xb0\x77\x9c\xa6\xd6\xb7\x4a\xd3\x5c\xfd\xa8\xb5\x39\x61\x3c\xe5\x4c\xa1\x39\x5d\xd7\xbf\x5a\x93\xc6\xd2\x51\x52\x0a\xc9\x85\xee\xac\x4d\x9d\x83\xc2\xbf\x01\x52\x4a\x14\x6f\xed\x49\x40\xec\x2a\xb5\x16\x0c\x49\xd3\x67\x1b\x64\x4a\xeb\x18\x19\x8a\xc0\x37\x97\xa8\xfe\x00\x02\xec\x84\xcf\xce\x79\x48\x37\x58\x9b\x0c\x73\xd1\x0d\xa9\xb0\x3b\x58\x43\x0c\x37\x13\x89\x8d\xe2\x15\xde\x35\x60\x26\xf1\x33\xa4\x0c\x57\xa8\x13\x85\xfd\x33\x1c\x82\xbb\xea\x98\x58\xe7\x5d\x5c\xc1\xcb\x27\xff\x6c\xda\x7b\x48\x51\x26\xc8\x52\xca\x56\x03\x38\x7b\xf1\xfa\x6f\x3a\x31\xd9\xdf\x5f\x20\x73\x50\xad\xd2\x37\x01\xdb\x0f\x6f\x26\xef\x3d\x15\x51\x35\x89\x91\x54\xbc\x78\x23\x78\x41\x56\xc4\xde\x4e\x4f\x7b\x19\xf8\x2b\x35\xdc\x73\x90\xa3\x3d\xe9\x11\x7e\x00\x1f\x7e\xff\xf7\xff\xf4\x61\x62\x3e\xfe\xcb\xef\x1f\x1d\xba\xd0\xaf\xd6\x9d\x42\xc0\x6d\x03\xf7\x30\xe2\x74\x4d\xb3\x34\xb8\xcd\x6f\xc3\xa9\xd6\xbf\xd9\xf4\x90\x60\x96\x41\x60\x8e\x8b\xc2\xbd\xc4\x7a\x3b\xc6\xd7\x46\xd1\xdb\xd9\x69\xd8\x29\xe5\x4b\x30\x2b\x1b\x6b\xec\x9c\x6c\x6b\x5c\xb3\xb9\x3b\x98\x8e\x5a\x37\xab\xa9\x05\x4f\xaf\x6e\xdb\x95\x7a\xbe\xd9\xf1\xcd\x61\xbb\x54\x44\x01\x5f\x36\xa5\x47\x7f\xb3\xeb\x2a\x56\x03\x45\xa6\x70\x9b\x76\xe6\xc4\x17\x84\x98\x36\xbc\xd1\xac\x5e\xef\x6d\x58\x9d\xab\x63\x07\xef\xc2\x40\xaf\xf3\x84\xd8\x45\xec\x59\x40\xed\x69\xee\x9f\xdc\x80\xab\x8f\xe7\xfb\x08\x99\x96\x5a\x87\x92\x93\x51\xb1\xf5\xbb\x42\x1a\xdb\x7d\x85\x90\x35\x7c\x2f\xd6\x19\xa5\x99\xc9\x2e\xfd\x9c\x6c\xbf\x82\xba\x83\xde\x45\x3b\x27\xdb\x48\xf1\x33\xba\xc5\x34\x18\x37\xf7\x17\x3d\x47\xab\x97\xbe\x17\xa2\x5e\xc0\x5e\x08\x27\x44\x13\xd7\xb5\x37\x75\x20\x44\xe3\x90\xb7\x1f\xd5\xcf\xe8\xce\x53\x67\x6b\x16\x5e\x90\xc4\x1e\xbb\xfb\xa3\xe8\x7e\xb3\xc9\xfb\xd1\x74\x27\xc6\x38\x1a\xb5\xc2\x42\x7b\x25\x7b\xd3\x43\x7d\x49\x66\xae\x98\x77\x34\x52\x5a\x6c\x5d\xea\xda\x87\x8a\xfb\xae\x18\xec\x19\x6e\xf0\x23\xe7\x19\x12\x16\x56\xcd\x59\x27\xe9\xd8\xcb\xec\x44\x89\x4c\x77\x0c\x9f\x3e\xb9\xdb\xed\x1c\x15\xe9\x0c\x90\xac\x5f\xd8\xdf\x7e\x88\x6f\xd5\xa9\x9b\xb7\xae\xb0\x71\xdc\xdc\x6e\xf4\x32\xc3\x1f\xb8\xe5\xa8\x13\xc6\xcd\xfc\xb6\x97\x7c\x25\x62\x93\x35\xf7\x40\x74\x18\xdc\x96\x4a\xff\x6f\xeb\xe3\xf3\xe4\xcd\x89\x69\x87\xfe\x17\x28\x57\xcb\xb4\x47\x83\xbd\xec\xde\xbe\xc0\xed\xe7\x6f\xb7\x71\x6c\xe1\xda\xde\xe0\x26\x0f\x75\xca\xda\xce\xac\x0e\x08\x7b\x1a\xa4\x0e\x9c\xc6\xdc\xf1\xf8\xa3\xff\x2a\x36\x25\x0a\x3b\x4f\xd3\xf4\x40\xa4\xf8\xf3\xb7\xaf\xdf\x2a\x41\xd9\x2a\x08\x23\x59\x2e\xa4\x12\xc1\x68\x00\xe3\xef\xbb\xf7\xd4\xcd\xcd\x52\x8e\x52\x37\x58\x03\xf3\x1a\x20\xae\xae\x86\x06\xa0\x68\x8e\xbc\x54\xf1\xf8\xbb\xfa\x61\x46\x95\xa1\x98\x22\x94\xa1\x70\xaf\x33\x0b\x4d\xe6\xb8\x1e\xf5\x5a\xef\x46\xcc\x3b\x8e\xe7\xba\x30\xf7\x2c\x94\x07\x47\xe6\xa9\x6e\xc4\xf8\x65\x10\xc2\x11\xbc\x24\x6a\x1d\x2d\x33\xce\x45\x60\x3e\x05\x61\x29\xcf\x83\xf0\x5b\xfb\x1e\xa4\x47\xca\xbe\x87\x6c\x3a\x48\x9a\xc6\xde\xe1\x47\xc7\xe5\xda\xab\x3a\x4a\x0b\x6b\xfe\x3d\x3e\xfc\xa8\xd7\x75\xed\x7e\xa5\x54\xe6\x54\x1a\xa7\x87\x25\x49\xd1\xe8\xc1\x03\xc1\x75\x37\x65\x40\xbc\xaa\xb7\xca\x89\x58\x51\x76\xbc\xe0\x4a\xf1\x7c\xf2\xe7\x62\x3b\x05\x57\x7b\x1f\x9b\x30\x24\x27\xa4\x54\x7c\x5a\xb7\xab\x87\x1f\x9d\x26\x2b\x5f\x7a\xb4\x28\x95\xe2\xcc\xe9\xd5\xfe\xa8\x45\x34\x6f\x14\x3d\x73\xa0\x53\x09\x55\x0b\x40\x04\x25\xc7\x26\xe3\xc4\xde\xa9\x85\x73\x32\xdd\x2a\x40\xd5\x1b\x1a\xf4\x35\x4d\x53\x64\xb1\xa7\x5d\xde\x7b\x7c\x57\x1b\x53\x4e\x5d\xd3\x57\xc9\x37\xb4\x32\x3d\xee\x36\x7c\xf5\x63\x54\x6b\xce\xea\xc5\xac\x91\xcd\x4c\x49\xfb\xc6\x9a\x97\x2a\x08\x5a\xad\x83\x01\x88\xec\xcb\x1d\xdf\x2c\xcf\x66\xe8\xeb\xda\x95\x7a\x2f\x10\x6f\x79\xfe\xd9\x7d\xbc\x02\x87\xd1\x0a\xd5\x3f\xbc\x7d\xfd\x2a\xf0\x86\x29\x4d\x94\x7d\x40\x25\x87\xde\x91\x81\x6e\x25\xa9\xf6\x5b\x08\xb8\xed\xd1\x55\xf5\xae\xb5\x7e\x73\xa5\x75\x99\xf0\xbc\xc8\x50\x61\xd0\x0d\x52\x92\x97\x22\x41\x7b\xfa\xd6\x9c\xbb\xd5\xe1\xc0\x2c\xeb\xbf\x03\x00\x00\xff\xff\xec\xb1\x7a\x46\xb4\x2f\x00\x00")

func assetsFlowhouseJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsFlowhouseJs,
		"assets/flowhouse.js",
	)
}

func assetsFlowhouseJs() (*asset, error) {
	bytes, err := assetsFlowhouseJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/flowhouse.js", size: 12212, mode: os.FileMode(436), modTime: time.Unix(1747816310, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5b\x6f\xeb\xb8\x11\x7e\x3f\xbf\x62\xca\xbc\xb4\xe8\x52\xb4\x73\x29\xb6\x8e\xec\x87\x6e\x7b\xfa\xb2\x5d\x9c\xb6\xd9\xa7\xa2\x08\x28\x71\x64\x33\xe1\x45\x25\x29\x5f\x36\xc8\x7f\x2f\x48\xc9\xb6\xa4\xd8\x59\x07\x08\x8a\x9e\x03\x44\x12\x67\xf8\xcd\xc7\x99\xe1\x78\xc8\xfc\x37\xc2\x96\x61\x57\x23\xac\x82\x56\x8b\x2f\x79\x7c\x80\xe2\x66\x39\x27\x68\xc8\xe2\x0b\x40\xbe\x42\x2e\xe2\x0b\x40\xae\x31\x70\x28\x57\xdc\x79\x0c\x73\xd2\x84\x8a\x7e\x4f\xfa\x22\xc3\x35\xce\xc9\x5a\xe2\xa6\xb6\x2e\x10\x28\xad\x09\x68\xc2\x9c\x6c\xa4\x08\xab\xb9\xc0\xb5\x2c\x91\xa6\x8f\xef\x40\x1a\x19\x24\x57\xd4\x97\x5c\xe1\x7c\xfa\x1d\xf8\x95\x93\xe6\x99\x06\x4b\x2b\x19\xe6\xc6\xee\xa1\x95\x34\xcf\xe0\x50\xcd\x89\x0f\x3b\x85\x7e\x85\x18\x08\xac\x1c\x56\x73\xb2\x0a\xa1\xf6\x33\xc6\x7c\xe0\xe5\x73\xcd\xc3\x2a\x2b\xac\x0d\x3e\x38\x5e\x97\xc2\x64\xa5\xd5\xec\x30\xc0\x6e\xb3\xbb\xec\x9a\x95\xde\x1f\xc7\x32\x2d\x4d\x56\x7a\x4f\xe0\x03\xc6\x4a\x2b\x30\x7b\xfa\x4f\x83\x6e\x97\x2c\x34\x92\x4d\xb3\xe9\x75\x36\x65\x61\x85\x1a\x3d\x2b\xb8\x47\xd6\x2a\xd0\x46\x26\xfc\x0e\x3e\xc8\xa0\x70\xf1\x55\xd9\xcd\xca\x36\x1e\x73\xd6\x0e\xb4\xc2\x64\xb1\x7d\x07\xb8\x2a\x1b\x1f\xac\x7e\x54\xb8\x44\x23\xe0\xa5\x1b\x06\xd0\x7c\x4b\x57\x28\x97\xab\x30\x83\xdb\xc9\xa4\xde\xde\x1f\x44\x76\x8d\xae\x52\x76\x43\x77\x33\xe0\x4d\xb0\x7b\xc9\x6b\xf7\xcc\x02\x2f\x14\x52\xaf\x21\xf4\x11\x6b\x2e\x84\x34\xcb\x19\x4c\xb2\xeb\x3b\x87\xfa\xcd\xb4\x96\x03\x5d\xa1\xaa\x69\x90\x75\x7f\xaa\xf5\x32\x48\x6b\x66\xe0\x83\x2c\x9f\x77\x47\x2e\xc1\xd6\x33\x98\x1c\xbf\x0b\x5e\x3e\x2f\x9d\x6d\x8c\x98\xc1\x55\x55\x55\x47\xc9\x2f\x54\x1a\x81\xdb\x19\x5c\xdf\x8f\x29\xd1\xc2\x86\x60\xf5\x0c\xbe\xef\x2f\x73\x2f\x4c\x26\x06\x92\xca\x9a\x40\xbd\xfc\x05\x67\x30\xbd\xed\x0b\x4a\xab\xac\x9b\xc1\xd5\xed\xed\x6d\x8f\x92\x75\x02\xdd\xc1\xc6\xb4\xde\x82\xb7\x4a\x0a\xb8\x12\x42\x0c\x9d\x90\xb3\x36\x38\x00\x10\xf7\x04\xdb\x6f\x8a\xbc\xb0\x62\xd7\x85\xcf\xf0\x35\x94\x8a\x7b\x3f\x27\x86\xaf\x0b\xee\xa0\x7d\x50\xc1\xdd\x73\xe7\x9f\xc8\x19\x8a\x65\x3b\x54\x29\xdc\x52\x2d\xa8\xb1\x1b\xc7\x6b\xa8\xe9\x84\xec\xa3\x9f\xf3\x21\x14\x2d\x1c\x37\x22\x2e\x83\x7a\x4d\x6f\xd2\x8b\x16\xf4\x1a\xb4\xa3\x93\x7d\x7e\x5e\x91\x7e\x66\xf1\x8e\x16\x33\x7c\xdd\xbd\x0a\x79\x60\x18\xb7\x26\x97\x06\x1d\xad\x54\x23\xc5\xd1\x70\x4f\xc7\xd9\xcd\x61\x7c\x3c\xbb\x33\x1f\xc9\x1b\x04\x11\xbf\x0a\x65\xcb\xe7\xb8\x38\x15\x93\x13\xbc\x14\x18\x9d\x50\xd3\x69\x0f\x65\x88\xd3\xe9\xd0\xd6\x39\x03\x35\x80\xbc\xb2\x4e\x8f\x87\x24\x2a\xe1\x31\x0c\x87\x7b\x82\x3d\x72\x9c\x4b\x63\xbe\xd5\x64\xac\x1b\x77\x79\x4a\xe8\xc5\x83\xd4\x08\xbf\xfd\xf9\xe1\x87\xdf\xe5\xac\x1b\x7a\xab\x7b\xd6\x21\xa7\x75\x4a\xab\x4e\xea\x44\xab\xbc\x40\x05\x95\x75\x73\x12\xa4\xc6\x47\x1f\xb8\x0b\x64\xf1\xcf\xf8\xc8\x59\x92\x9e\x99\x29\x4d\xdd\x04\x88\x85\x7a\x4e\x04\x0f\x18\xa7\x53\x65\x4b\xae\x48\x57\x74\x7b\x80\x03\x17\xc4\x38\x3b\xab\x40\xd3\x69\x8a\x04\x48\x31\xb4\x7e\x6a\x39\x4c\xc8\xf5\x27\xae\x13\x8d\x20\x8b\xbf\x18\xf1\x29\x6b\x8c\x60\x17\xae\x30\xd9\xbd\x7c\x7d\x27\x87\x73\xf6\xb9\x29\x77\x05\x0f\xb6\x86\xb8\x4d\xfd\xff\x24\xe7\xfa\x5e\x35\x8d\x2e\xd0\x75\x0e\xb2\x75\x22\x71\xf0\xed\xe1\xfb\x5d\xdf\x6a\x69\xe6\x24\x3e\xf9\x76\x4e\xa6\x93\xc9\x64\x42\x60\xcd\x55\x83\x73\x72\x37\x99\x9c\x23\xe1\x35\x57\x6a\x00\x1c\x70\x1b\x20\xfe\xa1\xba\x09\x78\x3a\x4c\xf1\xdf\x0f\x2b\x6b\xbd\x34\x4b\x08\xd6\x82\xe6\x66\x07\x3a\x15\x17\x5e\x55\x58\x06\x28\x9c\xdd\x78\x74\x50\xa3\x8b\xb0\xdc\x94\x98\x9d\xa6\xc0\x12\x87\x4f\xcc\x86\xc1\xf8\xa7\xa4\xc6\x57\xa9\x02\xba\x5f\xc9\x8a\x18\xbb\x2a\x29\xfa\x53\x50\x67\xd6\xf2\x79\xf9\x54\x34\x21\x58\xd3\x25\x54\xfb\x41\x7a\xa4\xbe\xa9\xe6\x98\x42\x45\x30\x50\x04\x43\x6b\x27\x35\x77\xbb\xf4\xee\x75\x4c\x26\xb2\xf8\x7d\xce\xda\xd9\xff\x6f\x1b\xf4\x4f\x0e\xf9\xb3\xb0\x1b\x73\x41\x20\x8a\xbd\xee\xa9\x58\x5c\xe6\xf6\x4b\x1d\x1f\x77\x11\xaa\x98\xf3\xed\x7e\x3d\x98\x26\x43\x26\xe7\xf7\x2f\xb4\x0d\x25\x6d\x61\x08\xe8\x46\x05\x59\x2b\x84\xd8\x2f\xcd\xc9\xcb\x0b\x64\x69\xed\x7f\xb6\x1b\xf3\x23\x1a\x78\x7d\x3d\x50\x79\x79\xa1\xe0\xb8\x59\x22\x64\x5f\xa3\x4f\xff\x1a\x7d\xe8\xe1\xf5\xf5\x0c\x55\x80\xdc\xd6\x21\x79\x1a\x52\xc9\x6f\xe1\x7f\x4c\xbf\x0b\xef\xe0\xbe\x0b\xd9\x82\x4a\x6b\xf6\x05\x27\x42\xfe\xc4\x35\x26\xc4\x3e\x7e\xce\x5a\xc5\xbe\x99\xd8\x43\xbf\xc7\x97\xed\x09\x5f\x3c\x29\x67\xad\x27\xcf\x44\xf5\xec\x6f\xe8\xe7\xe4\x76\xbf\xae\xfb\xa6\xd0\x32\x1c\x0a\xf1\x3f\x1a\x03\x7f\x8f\x67\x8f\x36\x35\x3a\xe9\xa8\x91\x3a\x89\x9c\xb3\x61\xcb\x35\x20\x35\xfc\xd0\x5c\x9a\x51\x37\xf8\x47\xd0\xa9\x3b\x8d\x27\x8f\xd4\xa0\xaa\x25\x9d\x4e\xa0\x0e\xf4\x06\xea\x2d\xbd\x1d\xf7\x92\x91\x5c\x3c\x4c\x86\x47\x21\xd7\x64\x31\xf2\xc0\x51\xa5\x7f\x0e\x1a\xa9\xe5\x2c\xf2\x38\xcd\x70\xf0\x11\xc1\xba\xf7\x88\x59\xdb\xba\xa9\xe9\xa1\x07\x26\x7b\x59\x6a\xf2\xa3\xb8\x3b\xd5\x54\x72\x8b\xe2\x3e\x9d\x65\xfe\x10\x4f\x5a\xe0\xd2\xb9\xeb\x3a\x9e\x2d\x0e\xe7\x96\xe9\xe4\x6e\x72\x0f\xe9\x54\x3b\xbb\xb9\x4b\x6a\xb5\x95\x26\xa0\xa3\xb8\x46\x13\xfc\x2c\xf6\xc8\xf7\xe4\x24\xb3\x03\xbb\xce\xf4\x5a\x7a\x59\x48\x25\xc3\x6e\xb6\x92\x42\xe0\xa0\xba\x3e\xa0\xae\x15\x0f\x38\x0e\xe6\xa8\xce\xf4\x66\x3c\x3a\xbb\xf9\xd7\xe3\xe3\x4f\x3f\xff\xed\xf1\xf1\xdf\x6f\x4a\xcb\xb8\xa5\x8f\x91\x3b\x55\x1a\xbb\xca\xd3\x83\x4d\xd9\x73\x04\xee\x8a\xd2\x19\xe1\x99\x8a\x44\x16\x5f\x3e\x52\x58\x7e\xad\xa4\x5c\x5c\x4c\x3e\x5e\x46\xde\xad\x05\xfd\xd2\xf1\x8e\xe2\xb9\x72\x71\x7a\xe3\x5f\x18\x98\x7e\x15\x88\xdd\xd4\x79\x5f\x0f\x23\x94\x96\xde\x8b\x50\x2f\xb2\x23\xd1\xa7\xd2\x3d\xd9\x3c\x74\x61\xe8\x2c\x0e\x93\x17\xb5\x5d\xe3\xdb\x4c\xda\x37\x16\x1e\x4b\x6b\xc4\xb8\xb5\xa0\xe7\x5a\x8b\x13\xdc\xdf\xee\xc5\xf1\xc0\x7e\xd3\xfa\xd2\xc9\x3a\x80\x77\xe5\xf9\x8b\xa0\xee\xca\xe7\x26\x9b\x66\xd3\x74\xb3\xf4\xe4\x09\x2c\x72\xd6\xce\x5d\x7c\x04\xea\x78\xa7\x74\xbc\x47\x7a\xf2\xe4\x32\xb0\x0f\xdc\x86\x3d\x8d\x2f\xc3\x2e\x36\xb2\xd9\x6c\xb2\xa5\x0f\x3c\xc8\x32\x21\xa7\x52\xee\x99\xb2\x5c\xa0\xbb\x1c\xa6\x14\xe6\xc9\x67\xa5\xb2\x8d\xa8\x14\x77\x98\xb0\xf8\x13\xdf\x32\x25\x0b\xcf\xbe\xf1\x9a\x7f\xe3\xce\x23\xbb\xcb\x6e\xb2\x09\xab\x79\xfc\xef\x3c\x5e\x46\x96\x55\xfb\x0b\x91\xb7\xba\x39\x6b\x2f\x6f\x72\x96\x2e\x3f\xff\x1b\x00\x00\xff\xff\x3f\x03\xa3\x49\x0c\x15\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 5388, mode: os.FileMode(436), modTime: time.Unix(1747816267, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/flowhouse.js": assetsFlowhouseJs,
	"assets/index.html":   assetsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"flowhouse.js": &bintree{assetsFlowhouseJs, map[string]*bintree{}},
		"index.html":   &bintree{assetsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
